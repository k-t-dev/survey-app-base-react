{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/DEVELOPMENT/survey/frontend/src/pages/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\";\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend, CartesianGrid, BarChart, Bar, PieChart, Pie, Cell } from \"recharts\";\nimport \"./Dashboard.css\";\nimport MenuBar from \"./MenuBar\"; // MenuBar コンポーネントをインポート\nimport moment from \"moment\"; // Moment.js for easier date manipulation\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const {\n    companyId,\n    shopId\n  } = useParams();\n  console.log(\"shopId in DashBoard\", shopId);\n  const [timeFrame, setTimeFrame] = useState(\"month\");\n  const [customStartDate, setCustomStartDate] = useState(\"\");\n  const [customEndDate, setCustomEndDate] = useState(\"\");\n  const [allData, setAllData] = useState([]);\n  const [questions, setQuestions] = useState([]);\n  const [loading, setLoading] = useState(true); // ローディング状態を追加\n  const [error, setError] = useState(null); // エラー状態を追加\n  const [feedbackData, setFeedbackData] = useState([]); // first_questionがtrueのデータを格納\n  const [starCounts, setStarCounts] = useState({}); // Starの数をカウント\n  const [sortConfig, setSortConfig] = useState({\n    key: \"answer_time\",\n    direction: \"descending\"\n  }); // 初期ソート設定\n  const [filters, setFilters] = useState({}); // フィルターの状態\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true); // データ取得開始時にローディングをtrueに\n      setError(null); // エラー状態をリセット\n      try {\n        const response = await fetch(`http://0.0.0.0:5001/survey-results/${companyId}/${shopId}`, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        console.log(\"response\", response);\n        if (response.ok) {\n          const data = await response.json();\n          console.log(\"Fetched Data:\", data);\n          setAllData(data);\n\n          // Extract unique questions from the data\n          const uniqueQuestions = {};\n          data.forEach(item => {\n            if (!uniqueQuestions[item.question_id]) {\n              uniqueQuestions[item.question_id] = {\n                id: item.question_id,\n                text: item.question,\n                options: []\n              };\n            }\n            if (uniqueQuestions[item.question_id].options.indexOf(item.answer) === -1) {\n              uniqueQuestions[item.question_id].options.push(item.answer);\n            }\n          });\n          setQuestions(Object.values(uniqueQuestions));\n\n          // Extract feedback data where first_question is true\n          const feedback = data.filter(item => item.first_question);\n          setFeedbackData(feedback);\n\n          // Count the occurrences of each star rating\n          const stars = {};\n          feedback.forEach(item => {\n            if (item.star) {\n              stars[item.star] = (stars[item.star] || 0) + 1;\n            }\n          });\n          setStarCounts(stars);\n        } else if (response.status === 404) {\n          // データが存在しない場合\n          setAllData([]);\n          setQuestions([]);\n          setFeedbackData([]);\n          setStarCounts({});\n        } else {\n          console.error(\"サーバーエラー:\", response.status);\n          setError(`サーバーエラー: ${response.status}`);\n        }\n      } catch (error) {\n        console.error(\"データ取得エラー:\", error);\n        setError(\"データの取得に失敗しました。\");\n      } finally {\n        setLoading(false); // データ取得完了後にローディングをfalseに\n      }\n    };\n    fetchData();\n  }, [companyId, shopId]);\n  const timeFrameOptions = [{\n    value: \"3days\",\n    label: \"📅 過去3日\"\n  }, {\n    value: \"week\",\n    label: \"📅 1週間\"\n  }, {\n    value: \"month\",\n    label: \"📅 1か月\"\n  }, {\n    value: \"3months\",\n    label: \"📅 3か月\"\n  }, {\n    value: \"custom\",\n    label: \"📅 期間指定\"\n  }, {\n    value: \"all\",\n    label: \"📅 全期間\"\n  }];\n  const filterDataByTimeFrame = () => {\n    let filteredData = allData;\n    const now = moment();\n    switch (timeFrame) {\n      case \"3days\":\n        filteredData = allData.filter(item => now.diff(moment(item.answer_time), \"days\") < 3);\n        break;\n      case \"week\":\n        filteredData = allData.filter(item => now.diff(moment(item.answer_time), \"weeks\") < 1);\n        break;\n      case \"month\":\n        filteredData = allData.filter(item => now.diff(moment(item.answer_time), \"months\") < 1);\n        break;\n      case \"3months\":\n        filteredData = allData.filter(item => now.diff(moment(item.answer_time), \"months\") < 3);\n        break;\n      case \"custom\":\n        const start = moment(customStartDate);\n        const end = moment(customEndDate);\n        filteredData = allData.filter(item => moment(item.answer_time).isSameOrAfter(start) && moment(item.answer_time).isSameOrBefore(end));\n        break;\n      case \"all\":\n      default:\n        break;\n    }\n    return filteredData;\n  };\n  const aggregateAnswers = questionId => {\n    const filteredData = filterDataByTimeFrame().filter(item => item.question_id === questionId);\n    const aggregated = {};\n    filteredData.forEach(response => {\n      aggregated[response.answer] = (aggregated[response.answer] || 0) + 1;\n    });\n    return Object.entries(aggregated).map(([option, count]) => ({\n      option,\n      count\n    }));\n  };\n  const prepareLineChartData = questionId => {\n    const filteredData = filterDataByTimeFrame().filter(item => item.question_id === questionId);\n    const timeGrouped = {};\n    filteredData.forEach(item => {\n      const date = moment(item.answer_time).format(\"YYYY-MM-DD\"); // Group by day\n      timeGrouped[date] = (timeGrouped[date] || 0) + 1;\n    });\n    return Object.entries(timeGrouped).sort((a, b) => new Date(a[0]) - new Date(b[0])) // Sort by date\n    .map(([time, count]) => ({\n      time,\n      count\n    }));\n  };\n  const handleSort = key => {\n    let direction = \"ascending\";\n    if (sortConfig.key === key && sortConfig.direction === \"ascending\") {\n      direction = \"descending\";\n    }\n    setSortConfig({\n      key,\n      direction\n    });\n  };\n  const sortedFeedbackData = [...feedbackData].sort((a, b) => {\n    if (sortConfig.key === \"answer_time\") {\n      const dateA = moment(a.answer_time);\n      const dateB = moment(b.answer_time);\n      return sortConfig.direction === \"ascending\" ? dateA.diff(dateB) : dateB.diff(dateA);\n    } else if (a[sortConfig.key] < b[sortConfig.key]) {\n      return sortConfig.direction === \"ascending\" ? -1 : 1;\n    } else if (a[sortConfig.key] > b[sortConfig.key]) {\n      return sortConfig.direction === \"ascending\" ? 1 : -1;\n    }\n    return 0;\n  });\n  const handleFilterChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFilters({\n      ...filters,\n      [name]: value\n    });\n  };\n  const filteredFeedbackData = sortedFeedbackData.filter(item => {\n    return Object.keys(filters).every(key => String(item[key]).toLowerCase().includes(filters[key].toLowerCase()));\n  });\n\n  // Generate unique colors\n  const colors = [\"#8884d8\", \"#82ca9d\", \"#ff7300\", \"#ff0000\", \"#00bfae\"];\n  const starColors = [\"#fdd835\", \"#fbc02d\", \"#f9a825\", \"#f57f17\", \"#ff6f00\"]; // Colors for stars\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-layout\",\n      children: [/*#__PURE__*/_jsxDEV(MenuBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-content\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u30C7\\u30FC\\u30BF\\u3092\\u8AAD\\u307F\\u8FBC\\u307F\\u4E2D...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-layout\",\n      children: [/*#__PURE__*/_jsxDEV(MenuBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-content\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this);\n  }\n  if (allData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-layout\",\n      children: [/*#__PURE__*/_jsxDEV(MenuBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u30A2\\u30F3\\u30B1\\u30FC\\u30C8\\u7D50\\u679C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u307E\\u3060\\u30A2\\u30F3\\u30B1\\u30FC\\u30C8\\u7D50\\u679C\\u304C\\u3042\\u308A\\u307E\\u305B\\u3093\\u3002\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-layout\",\n    children: [/*#__PURE__*/_jsxDEV(MenuBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" \\u30A2\\u30F3\\u30B1\\u30FC\\u30C8\\u7D50\\u679C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"timeFrameSelect\",\n          children: \"\\u8868\\u793A\\u5358\\u4F4D: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"timeFrameSelect\",\n          value: timeFrame,\n          onChange: e => setTimeFrame(e.target.value),\n          className: \"dashboard-select\",\n          children: timeFrameOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.value,\n            children: option.label\n          }, option.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), timeFrame === \"custom\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: customStartDate,\n            onChange: e => setCustomStartDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: customEndDate,\n            onChange: e => setCustomEndDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: question.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-chart-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-title\",\n            children: \"\\u56DE\\u7B54\\u6570\\u306E\\u6642\\u7CFB\\u5217\\u30B0\\u30E9\\u30D5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n            width: 400,\n            height: 300,\n            data: prepareLineChartData(question.id),\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: \"count\",\n              stroke: colors[0],\n              name: \"\\u56DE\\u7B54\\u6570\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-title\",\n            children: \"\\u5404\\u56DE\\u7B54\\u5225\\u306E\\u7DCF\\u8A08\\u6570\\u30B0\\u30E9\\u30D5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n            width: 400,\n            height: 300,\n            data: aggregateAnswers(question.id),\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              type: \"category\",\n              dataKey: \"option\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"count\",\n              fill: colors[0],\n              name: \"\\u56DE\\u7B54\\u6570\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-title\",\n            children: \"\\u56DE\\u7B54\\u306E\\u5272\\u5408\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n            width: 400,\n            height: 300,\n            children: [/*#__PURE__*/_jsxDEV(Pie, {\n              data: aggregateAnswers(question.id),\n              dataKey: \"count\",\n              nameKey: \"option\",\n              cx: \"50%\",\n              cy: \"50%\",\n              outerRadius: 100,\n              label: entry => `${entry.option}: ${(entry.percent * 100).toFixed(0)}%`,\n              children: aggregateAnswers(question.id).map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                fill: colors[index % colors.length]\n              }, `cell-${index}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this)]\n      }, question.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }, this)), feedbackData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u304A\\u5BA2\\u69D8\\u306E\\u58F0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedback-display\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feedback-table-container\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"feedback-table\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    onClick: () => handleSort(\"answer_time\"),\n                    children: [\"\\u56DE\\u7B54\\u65E5\\u6642\", sortConfig.key === \"answer_time\" && /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: sortConfig.direction === \"ascending\" ? \" ▲\" : \" ▼\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 371,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: [\"\\u30B3\\u30E1\\u30F3\\u30C8\", /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      name: \"comment\",\n                      value: filters.comment || \"\",\n                      onChange: handleFilterChange,\n                      placeholder: \"\\u30D5\\u30A3\\u30EB\\u30BF\\u30FC\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 376,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 374,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: [\"\\u8A55\\u4FA1\", /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      name: \"star\",\n                      value: filters.star || \"\",\n                      onChange: handleFilterChange,\n                      placeholder: \"\\u30D5\\u30A3\\u30EB\\u30BF\\u30FC\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 386,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 384,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: filteredFeedbackData.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: moment(item.answer_time).format(\"YYYY-MM-DD HH:mm\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 399,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: item.comment || \"---\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 400,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: item.star || \"---\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 401,\n                    columnNumber: 25\n                  }, this)]\n                }, `feedback-${index}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this), Object.keys(starCounts).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"star-pie-chart\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\u8A55\\u4FA1\\u5206\\u5E03\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n              width: 500,\n              height: 300,\n              children: [/*#__PURE__*/_jsxDEV(Pie, {\n                data: Object.entries(starCounts).map(([star, count]) => ({\n                  star,\n                  count\n                })),\n                dataKey: \"count\",\n                nameKey: \"star\",\n                cx: \"50%\",\n                cy: \"50%\",\n                outerRadius: 60,\n                innerRadius: 0,\n                label: entry => `${entry.star}★(${(entry.percent * 100).toFixed(1)}%)`,\n                children: Object.keys(starCounts).map((star, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                  fill: starColors[parseInt(star) - 1] || \"#ccc\" // Use star-specific colors\n                }, `cell-${index}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"JibC7T4+NGYZlrnDRGi1M7pTMIU=\", false, function () {\n  return [useParams];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","useLocation","LineChart","Line","XAxis","YAxis","Tooltip","Legend","CartesianGrid","BarChart","Bar","PieChart","Pie","Cell","MenuBar","moment","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","companyId","shopId","console","log","timeFrame","setTimeFrame","customStartDate","setCustomStartDate","customEndDate","setCustomEndDate","allData","setAllData","questions","setQuestions","loading","setLoading","error","setError","feedbackData","setFeedbackData","starCounts","setStarCounts","sortConfig","setSortConfig","key","direction","filters","setFilters","fetchData","response","fetch","method","headers","ok","data","json","uniqueQuestions","forEach","item","question_id","id","text","question","options","indexOf","answer","push","Object","values","feedback","filter","first_question","stars","star","status","timeFrameOptions","value","label","filterDataByTimeFrame","filteredData","now","diff","answer_time","start","end","isSameOrAfter","isSameOrBefore","aggregateAnswers","questionId","aggregated","entries","map","option","count","prepareLineChartData","timeGrouped","date","format","sort","a","b","Date","time","handleSort","sortedFeedbackData","dateA","dateB","handleFilterChange","event","name","target","filteredFeedbackData","keys","every","String","toLowerCase","includes","colors","starColors","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","htmlFor","onChange","e","type","width","height","strokeDasharray","dataKey","stroke","fill","nameKey","cx","cy","outerRadius","entry","percent","toFixed","index","onClick","comment","placeholder","innerRadius","parseInt","_c","$RefreshReg$"],"sources":["/Users/user/Desktop/DEVELOPMENT/survey/frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  CartesianGrid,\n  BarChart,\n  Bar,\n  PieChart,\n  Pie,\n  Cell,\n} from \"recharts\";\nimport \"./Dashboard.css\";\nimport MenuBar from \"./MenuBar\"; // MenuBar コンポーネントをインポート\nimport moment from \"moment\"; // Moment.js for easier date manipulation\n\nconst Dashboard = () => {\n  const { companyId, shopId } = useParams();\n\n  console.log(\"shopId in DashBoard\", shopId);\n\n  const [timeFrame, setTimeFrame] = useState(\"month\");\n  const [customStartDate, setCustomStartDate] = useState(\"\");\n  const [customEndDate, setCustomEndDate] = useState(\"\");\n\n  const [allData, setAllData] = useState([]);\n  const [questions, setQuestions] = useState([]);\n  const [loading, setLoading] = useState(true); // ローディング状態を追加\n  const [error, setError] = useState(null); // エラー状態を追加\n  const [feedbackData, setFeedbackData] = useState([]); // first_questionがtrueのデータを格納\n  const [starCounts, setStarCounts] = useState({}); // Starの数をカウント\n  const [sortConfig, setSortConfig] = useState({ key: \"answer_time\", direction: \"descending\" }); // 初期ソート設定\n  const [filters, setFilters] = useState({}); // フィルターの状態\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true); // データ取得開始時にローディングをtrueに\n      setError(null); // エラー状態をリセット\n      try {\n        const response = await fetch(\n          `http://0.0.0.0:5001/survey-results/${companyId}/${shopId}`,\n          {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n\n        console.log(\"response\", response);\n\n        if (response.ok) {\n          const data = await response.json();\n          console.log(\"Fetched Data:\", data);\n          setAllData(data);\n\n          // Extract unique questions from the data\n          const uniqueQuestions = {};\n          data.forEach((item) => {\n            if (!uniqueQuestions[item.question_id]) {\n              uniqueQuestions[item.question_id] = {\n                id: item.question_id,\n                text: item.question,\n                options: [],\n              };\n            }\n            if (\n              uniqueQuestions[item.question_id].options.indexOf(item.answer) ===\n              -1\n            ) {\n              uniqueQuestions[item.question_id].options.push(item.answer);\n            }\n          });\n          setQuestions(Object.values(uniqueQuestions));\n\n          // Extract feedback data where first_question is true\n          const feedback = data.filter((item) => item.first_question);\n          setFeedbackData(feedback);\n\n          // Count the occurrences of each star rating\n          const stars = {};\n          feedback.forEach((item) => {\n            if (item.star) {\n              stars[item.star] = (stars[item.star] || 0) + 1;\n            }\n          });\n          setStarCounts(stars);\n        } else if (response.status === 404) {\n          // データが存在しない場合\n          setAllData([]);\n          setQuestions([]);\n          setFeedbackData([]);\n          setStarCounts({});\n        } else {\n          console.error(\"サーバーエラー:\", response.status);\n          setError(`サーバーエラー: ${response.status}`);\n        }\n      } catch (error) {\n        console.error(\"データ取得エラー:\", error);\n        setError(\"データの取得に失敗しました。\");\n      } finally {\n        setLoading(false); // データ取得完了後にローディングをfalseに\n      }\n    };\n\n    fetchData();\n  }, [companyId, shopId]);\n\n  const timeFrameOptions = [\n    { value: \"3days\", label: \"📅 過去3日\" },\n    { value: \"week\", label: \"📅 1週間\" },\n    { value: \"month\", label: \"📅 1か月\" },\n    { value: \"3months\", label: \"📅 3か月\" },\n    { value: \"custom\", label: \"📅 期間指定\" },\n    { value: \"all\", label: \"📅 全期間\" },\n  ];\n\n  const filterDataByTimeFrame = () => {\n    let filteredData = allData;\n    const now = moment();\n\n    switch (timeFrame) {\n      case \"3days\":\n        filteredData = allData.filter(\n          (item) => now.diff(moment(item.answer_time), \"days\") < 3\n        );\n        break;\n      case \"week\":\n        filteredData = allData.filter(\n          (item) => now.diff(moment(item.answer_time), \"weeks\") < 1\n        );\n        break;\n      case \"month\":\n        filteredData = allData.filter(\n          (item) => now.diff(moment(item.answer_time), \"months\") < 1\n        );\n        break;\n      case \"3months\":\n        filteredData = allData.filter(\n          (item) => now.diff(moment(item.answer_time), \"months\") < 3\n        );\n        break;\n      case \"custom\":\n        const start = moment(customStartDate);\n        const end = moment(customEndDate);\n        filteredData = allData.filter(\n          (item) =>\n            moment(item.answer_time).isSameOrAfter(start) &&\n            moment(item.answer_time).isSameOrBefore(end)\n        );\n        break;\n      case \"all\":\n      default:\n        break;\n    }\n    return filteredData;\n  };\n\n  const aggregateAnswers = (questionId) => {\n    const filteredData = filterDataByTimeFrame().filter(\n      (item) => item.question_id === questionId\n    );\n    const aggregated = {};\n    filteredData.forEach((response) => {\n      aggregated[response.answer] = (aggregated[response.answer] || 0) + 1;\n    });\n    return Object.entries(aggregated).map(([option, count]) => ({\n      option,\n      count,\n    }));\n  };\n\n  const prepareLineChartData = (questionId) => {\n    const filteredData = filterDataByTimeFrame().filter(\n      (item) => item.question_id === questionId\n    );\n    const timeGrouped = {};\n    filteredData.forEach((item) => {\n      const date = moment(item.answer_time).format(\"YYYY-MM-DD\"); // Group by day\n      timeGrouped[date] = (timeGrouped[date] || 0) + 1;\n    });\n    return Object.entries(timeGrouped)\n      .sort((a, b) => new Date(a[0]) - new Date(b[0])) // Sort by date\n      .map(([time, count]) => ({ time, count }));\n  };\n\n  const handleSort = (key) => {\n    let direction = \"ascending\";\n    if (sortConfig.key === key && sortConfig.direction === \"ascending\") {\n      direction = \"descending\";\n    }\n    setSortConfig({ key, direction });\n  };\n\n  const sortedFeedbackData = [...feedbackData].sort((a, b) => {\n    if (sortConfig.key === \"answer_time\") {\n      const dateA = moment(a.answer_time);\n      const dateB = moment(b.answer_time);\n      return sortConfig.direction === \"ascending\" ? dateA.diff(dateB) : dateB.diff(dateA);\n    } else if (a[sortConfig.key] < b[sortConfig.key]) {\n      return sortConfig.direction === \"ascending\" ? -1 : 1;\n    } else if (a[sortConfig.key] > b[sortConfig.key]) {\n      return sortConfig.direction === \"ascending\" ? 1 : -1;\n    }\n    return 0;\n  });\n\n  const handleFilterChange = (event) => {\n    const { name, value } = event.target;\n    setFilters({ ...filters, [name]: value });\n  };\n\n  const filteredFeedbackData = sortedFeedbackData.filter((item) => {\n    return Object.keys(filters).every((key) =>\n      String(item[key]).toLowerCase().includes(filters[key].toLowerCase())\n    );\n  });\n\n  // Generate unique colors\n  const colors = [\"#8884d8\", \"#82ca9d\", \"#ff7300\", \"#ff0000\", \"#00bfae\"];\n  const starColors = [\"#fdd835\", \"#fbc02d\", \"#f9a825\", \"#f57f17\", \"#ff6f00\"]; // Colors for stars\n\n  if (loading) {\n    return (\n      <div className=\"dashboard-layout\">\n        <MenuBar />\n        <div className=\"dashboard-content\">\n          <p>データを読み込み中...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"dashboard-layout\">\n        <MenuBar />\n        <div className=\"dashboard-content\">\n          <p className=\"error-message\">{error}</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (allData.length === 0) {\n    return (\n      <div className=\"dashboard-layout\">\n        <MenuBar />\n        <div className=\"dashboard-content\">\n          <h1>アンケート結果</h1>\n          <p>まだアンケート結果がありません。</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"dashboard-layout\">\n      <MenuBar />\n      <div className=\"dashboard-content\">\n        <div className=\"dashboard-header\">\n          <h1> アンケート結果</h1>\n        </div>\n\n        <div className=\"dashboard-selector\">\n          <label htmlFor=\"timeFrameSelect\">表示単位: </label>\n          <select\n            id=\"timeFrameSelect\"\n            value={timeFrame}\n            onChange={(e) => setTimeFrame(e.target.value)}\n            className=\"dashboard-select\"\n          >\n            {timeFrameOptions.map((option) => (\n              <option key={option.value} value={option.value}>\n                {option.label}\n              </option>\n            ))}\n          </select>\n\n          {timeFrame === \"custom\" && (\n            <>\n              <input\n                type=\"date\"\n                value={customStartDate}\n                onChange={(e) => setCustomStartDate(e.target.value)}\n              />\n              <input\n                type=\"date\"\n                value={customEndDate}\n                onChange={(e) => setCustomEndDate(e.target.value)}\n              />\n            </>\n          )}\n        </div>\n\n        {questions.map((question) => (\n          <div key={question.id} className=\"dashboard-chart-container\">\n            <h2>{question.text}</h2>\n\n            <div className=\"dashboard-chart-row\">\n              {/* Line Chart: Total Answers over Time */}\n              <div className=\"chart-title\">回答数の時系列グラフ</div>\n              <LineChart width={400} height={300} data={prepareLineChartData(question.id)}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"time\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"count\"\n                  stroke={colors[0]}\n                  name=\"回答数\"\n                />\n              </LineChart>\n\n              {/* Bar Chart: Total Count of Each Answer (Filtered by Time) */}\n              <div className=\"chart-title\">各回答別の総計数グラフ</div>\n              <BarChart width={400} height={300} data={aggregateAnswers(question.id)}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis type=\"category\" dataKey=\"option\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Bar dataKey=\"count\" fill={colors[0]} name=\"回答数\" />\n              </BarChart>\n\n              {/* Pie Chart: Distribution of Answers (Filtered by Time) */}\n              <div className=\"chart-title\">回答の割合</div>\n              <PieChart width={400} height={300}>\n                <Pie\n                  data={aggregateAnswers(question.id)}\n                  dataKey=\"count\"\n                  nameKey=\"option\"\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  outerRadius={100}\n                  label={(entry) =>\n                    `${entry.option}: ${(entry.percent * 100).toFixed(0)}%`\n                  }\n                >\n                  {aggregateAnswers(question.id).map((entry, index) => (\n                    <Cell\n                      key={`cell-${index}`}\n                      fill={colors[index % colors.length]}\n                    />\n                  ))}\n                </Pie>\n                <Legend />\n              </PieChart>\n            </div>\n          </div>\n        ))}\n\n        {/* Feedback Table with Sorting and Filtering */}\n        {feedbackData.length > 0 && (\n          <div className=\"feedback-section\">\n            <h2>お客様の声</h2>\n            <div className=\"feedback-display\">\n              <div className=\"feedback-table-container\">\n                <table className=\"feedback-table\">\n                  <thead>\n                    <tr>\n                      <th onClick={() => handleSort(\"answer_time\")}>\n                        回答日時\n                        {sortConfig.key === \"answer_time\" && (\n                          <span>{sortConfig.direction === \"ascending\" ? \" ▲\" : \" ▼\"}</span>\n                        )}\n                      </th>\n                      <th>\n                        コメント\n                        <input\n                          type=\"text\"\n                          name=\"comment\"\n                          value={filters.comment || \"\"}\n                          onChange={handleFilterChange}\n                          placeholder=\"フィルター\"\n                        />\n                      </th>\n                      <th>\n                        評価\n                        <input\n                          type=\"text\"\n                          name=\"star\"\n                          value={filters.star || \"\"}\n                          onChange={handleFilterChange}\n                          placeholder=\"フィルター\"\n                        />\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {filteredFeedbackData.map((item, index) => (\n                      <tr key={`feedback-${index}`}>\n                        <td>{moment(item.answer_time).format(\"YYYY-MM-DD HH:mm\")}</td>\n                        <td>{item.comment || \"---\"}</td>\n                        <td>{item.star || \"---\"}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n\n              {Object.keys(starCounts).length > 0 && (\n                <div className=\"star-pie-chart\">\n                  <h3>評価分布</h3>\n                  <PieChart width={500} height={300}>\n                    <Pie\n                      data={Object.entries(starCounts).map(([star, count]) => ({\n                        star,\n                        count,\n                      }))}\n                      dataKey=\"count\"\n                      nameKey=\"star\"\n                      cx=\"50%\"\n                      cy=\"50%\"\n                      outerRadius={60}\n                      innerRadius={0} \n                      label={(entry) => `${entry.star}★(${(entry.percent * 100).toFixed(1)}%)`}\n                    >\n                      {Object.keys(starCounts).map((star, index) => (\n                        <Cell\n                          key={`cell-${index}`}\n                          fill={starColors[parseInt(star) - 1] || \"#ccc\"} // Use star-specific colors\n                        />\n                      ))}\n                    </Pie>\n                    <Legend />\n                  </PieChart>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}